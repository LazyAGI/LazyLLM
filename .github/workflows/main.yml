name: LazyLLM ci
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - ".git*"
env:
  CI_PATH: '/home/mnt/platform_ci/GitHub/${{ github.repository }}/${GITHUB_RUN_NUMBER}'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Clone:
    runs-on: tps_sco_nv
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Check if submodules are updated
        id: check_submodule
        run: |
          git submodule update --init --recursive
          if [[ $(git diff --submodule) != "" ]]; then
            echo "submodule_updated=true" >> $GITHUB_ENV
          else
            echo "submodule_updated=false" >> $GITHUB_ENV
          fi

      - name: Create custom directory
        run: |
          set -ex
          echo ${{ env.CI_PATH }}
          mkdir -p ${{ env.CI_PATH }}

      - name: Clean custom directory
        run: |
          set -ex
          if [ -d "${{ env.CI_PATH }}" ]; then
            rm -rf ${{ env.CI_PATH }}/*
          fi

      - name: Move code to custom directory
        run: |
          set -ex
          mv $GITHUB_WORKSPACE/* ${{ env.CI_PATH }}/

  BasicTests:
    runs-on: tps_sco_nv
    needs: [Clone]
    steps:
      - name: RunTests
        run: |
          set -ex
          cd ${{ env.CI_PATH }}
          realpath .
          env | grep '^SCC'
          export LAZYLLM_SCO_ENV_NAME=lazyllm
          export LAZYLLM_DEFAULT_LAUNCHER=sco
          export LAZYLLM_SLURM_PART=a100
          export PYTHONPATH=$PWD:$PYTHONPATH
          export LAZYLLM_SCO_WORKSPACE=expert-services
          export LAZYLLM_DATA_PATH=/mnt/lustre/share_data/lazyllm/data/
          export LAZYLLM_MODEL_PATH=/mnt/lustre/share_data/lazyllm/models
          python -m pytest tests/basic_tests/

  AdvancedTests:
    runs-on: tps_sco_nv
    needs: [Clone]
    steps:
      - name: RunTests
        run: |
          set -ex
          cd ${{ env.CI_PATH }}
          env | grep '^SCC'
          export LAZYLLM_SCO_ENV_NAME=lazyllm
          export LAZYLLM_DEFAULT_LAUNCHER=sco
          export LAZYLLM_SLURM_PART=a100
          export PYTHONPATH=$PWD:$PYTHONPATH
          export LAZYLLM_SCO_WORKSPACE=expert-services
          export LAZYLLM_DATA_PATH=/mnt/lustre/share_data/lazyllm/data/
          export LAZYLLM_MODEL_PATH=/mnt/lustre/share_data/lazyllm/models
          python -m pytest tests/advanced_tests/

  Poetry_Test:
    runs-on: tps_sco_nv
    needs: [BasicTests,AdvancedTests]
    if: env.submodule_updated == 'true'
    steps:
      - name: Install deps
        shell: bash
        run: |
          set -ex
          cd ${{ env.CI_PATH }}
          source deactivate
          cp LazyLLM-Env/poetry.lock . && poetry install
      - name: RunTests
        run: |
          set -ex
          cd ${{ env.CI_PATH }}
          source deactivate
          poetry shell
          realpath .
          env | grep '^SCC'
          export LAZYLLM_SCO_ENV_NAME=lazyllm
          export LAZYLLM_DEFAULT_LAUNCHER=sco
          export LAZYLLM_SLURM_PART=a100
          export PYTHONPATH=$PWD:$PYTHONPATH
          export LAZYLLM_SCO_WORKSPACE=expert-services
          export LAZYLLM_DATA_PATH=/mnt/lustre/share_data/lazyllm/data/
          export LAZYLLM_MODEL_PATH=/mnt/lustre/share_data/lazyllm/models
          python -m pytest tests/basic_tests/
          python -m pytest tests/advanced_tests/
      - name: Clean_Poetry_env
        if: always()
        run: |
          set -ex
          cd ${{ env.CI_PATH }}
          source deactivate
          current_env=$(poetry env list | grep 'Activated' | awk '{print $1}')
          poetry env remove "$current_env"